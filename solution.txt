1. Описать шаги, необходимые для диагностики и возможного устранения проблемы на
одном из сервисов, который работает медленно:
● Описать, как мы узнаём о проблеме.

- получение нотификаций (алертов) на критические состояния АПК в Slack, Telegram
- при наличии реалтайм мониторинга дашбордов, визуальная идентификация изменений на графиках, статмап и пр.
- пользовательские жалобы на некорректную работу сервисов

● Описать, как мы подтверждаем наличие проблемы.

- анализ логов на предмет наличия 4хх и 5хх кодов ответа сервиса
- при помощи grep по ключам 'err|ERR|FATAL|fatal|Err|Fatal' анализируем логи с ошибками (напр. нехватки дискового пространства, сетевые ошибки, аутентификации) 
- анализ дашбордов Zabbix, Grafana на наличие аномалий в графиках, смотрим разрезы за 12h, 24h, week, month
- подключение к целевым (связанных с работой сервиса) хостам для дополнительных проверок
- визуальная диагностика ендпоинтов в браузере при наличии веб-интерфейса

● Описать диагностику при условии, что нам доступны следующие инструменты:
  ● OpenSearch и логи в нём.
    - в веб интерфейсе Kibana > Discover
  ● Zabbix и Grafana.
    - Zabbix
      - анализ дашбордов (при наличии)
      - анализируем раздел Latest data (CPU Utilization, Memory Usage, Network Traffic и пр.)
      - раздел Problems
      - раздел Graphs
      - анализ производительности в Reports
    - Grafana
      - Explore
      - Dashboards
  ● Доступ по SSH до хостов, на которых установлен сервис.
      - проверка исрользования ресурсов на сервере
        - top, htop, free -m, df -h
        - при наличии docker контейнеров проверяем их статус и логи

● Возможное устранение проблемы:

[2024-08-27 08:56:54] [ERROR] Local snapshot was not created - No space left on device.
Указывает на нехватку дискового пространства. Это нужно подтвердить через команду df -h на сервере
либо в веб интерфейсе используемого хранилища.

[2024-08-27 08:57:04] [DEBUG] Starting scheduled job: JobID=801.
[2024-08-27 08:57:06] [ERROR] Cannot execute scheduled job.
Ошибка выполнения джобы, может быть связана с нехваткой ресурсов, ошибкой подключения к БД и пр.
По JobID можно посмотреть все этапы джобы в пайпе и определить предыдущие успешные этапы и момент фейла.

[2024-08-27 09:00:44] [DEBUG] Creating local snapshot...
[2024-08-27 09:00:45] [ERROR] Cannot create local snapshot - Previous snapshot id is incorrect.
Нужно проверить состояние предыдущего слепка (возможно он поврежден) либо возможно некорректный ID.
Проверить наличие свободного дискового пространства.
Попробовать удалить предыдущий снапшот (если он повреждён) и перезапустить джобу.

2. С использованием любого языка программирования написать скрипт, который
принимает на вход лог-файл, а на выходе даёт следующую информацию:
● Сколько всего строк в файле
● Где находится файл физически
● Количество запросов, сделанных с локального адреса хоста
● Количество запросов, сделанных из непубличной сети
● Количество запросов, сделанных с внешней сети
● Количество успешных запросов
● Количество неуспешных запросов
● Список уникальных IP и количество запросов, сделанных с них

python3 script.py

3. Привести пример настройки алерта для Grafana или OpenSearch, который будет
отправлять сообщение в Slack в случае превышения количества ошибок в логах сервиса
на всех серверах, где запущен сервис (больше, чем 50 за минуту).

Настройка алерта Grafana > Slack.
Настройку будем проводить с использованием Loki datasource.
Переходим в Grafana > Alerting > Alert rules > New Alert rule
Создаём запрос 
sum by (app) (
  count_over_time(
    {namespace="production"} 
    |~ `\s(4[0-9]{2}|5[0-9]{2})\s|error|Error|ERROR|fatal` 
    !~ `\s(2[0-9]{2}|3[0-9]{2})\s` [1m]
  )
)

Этот alert rule выводит количество ошибок и статус-кодов 4xx и 5xx за 1 минуту на всех серверах. В результат запроса не будут включены успешные коды ответа.       
Далее указываем порог срабатывания алерта на значение выше 50.
Указываем чстоту проверки правила (Evaluation interval).
Заполняем поля Rule name, Group, Folder, summary and annotations.
В поле description используем переменные.
{{ range $key, $value := $values }}
    app={{ $value.Labels.app }}, value={{ printf "%.2f" $value.Value }}
  {{ end }}

Далее создаём Slack-app и получаем токен.
Создаём алерт канал и приглашаем туда бота.
Создаём в Grafana новый contaсt point и его темплейт, заполняем поля, указываем токен.
Делаем тестовую отправку.
Далее в Notification policies подключаем алерт рул к контактной точке по лейблу.

4. Предоставить пример создания отчета об инциденте на основе логов, которые
предоставлены. Форма отчета - свободная.

IND board

Web-server errors 2024-08-27

В промежуток времени с 10:39:11 по 11:18:45 зафиксирован всплеск ошибок 500 (Internal Server Error) и 404 (Not Found).
https://grafana.com/grafana/dashboards/

500 (Internal Server Error)

127.0.0.1 → 10/Apr/2007:10:39:11 (GET / HTTP/1.1)
139.12.0.2 → 10/Apr/2007:10:40:54 (GET / HTTP/1.1)
127.0.0.1 → 10/Apr/2007:10:53:10 (GET / HTTP/1.1)
217.0.22.3 → 10/Apr/2007:10:54:53 (GET /cgi/machine.pl HTTP/1.1)
172.18.99.3 → 10/Apr/2007:10:59:11 (GET / HTTP/1.1)
139.12.0.2 → 10/Apr/2007:11:00:54 (GET / HTTP/1.1)
127.0.0.1 → 10/Apr/2007:11:13:10 (GET / HTTP/1.1)

В указанный промежуток времени всплесков нагрузок на хост не наблюдалось.
https://grafana.com/grafana/node-exporter-dashboard

в ходе анализа было выявлено, что ошибки были вызваны некорректной работой /cgi/machine.pl
и отсуствием запрашиваемых файлов в корневом каталоге

404 (Not Found)

10.1.7.189 → 10/Apr/2007:10:39:11 (GET /favicon.ico HTTP/1.1)
217.0.22.3 → 10/Apr/2007:10:58:45 (GET /talks/Fundamentals/read-excel-file.html HTTP/1.1)
172.18.99.3 → 10/Apr/2007:10:59:11 (GET /favicon.ico HTTP/1.1)

Данные ошибки были вызваны отсутствием запрашиваемого favicon и read-excel-file.html, 
что подтвердилось после анализа репозитория с приложением.

Рекомендации:
- провести дополнительный анализ серверных логов в разрезе за 48h
- проверить конфигурацию скрипта machine.pl
- проверить доступность корневого ресурса / (в т.ч. права доступа)
- добавить favicon.ico и read-excel-file.html

